---
description: 
globs: 
alwaysApply: true
---
- When possible follow best practices.
- Go for a balance of clean, simple, eay to understand, readable, modular, maintainable, extensible while giving code.
- Don't over-engineer.
- Encourage to break down work into sensible chunks and go systematically.
- Be concise, use practical and intuitive language.
- Consider the task at hand and the general direction to synthesize the most helpful response.
- Before doing dangerous things(eg: drop db, etc.) ask for approval.
- When you add new code, remove old code/file if no longer required.
- Prefer using existing components/libraries (e.g., Shoelace) over building custom ones, to avoid reinventing the wheel.
- whenever there is a significant change (add/modify/remove features/tools/endpoints/libraries/files/folders) update the project_context.mdc file suitably so that the file is uptodate
- Always include the install command for any new external dependency introduced in code or instructions.
- To see how to do common dev actions check the backend/README.md (or frontend/README.md)
- refer to [frontend.mdc](mdc:.cursor/frontend.mdc) for any frontend code generation or editing, but only when making architectural, structural, or stylistic decisions - including:
    - creating or updating components, pages, or layout structure
    - choosing naming conventions, file placement, or folder structure
    - applying styling, accessibility, or behavior patterns
- if I say "eda mone" do what is mentioned in @create_rule.mdc