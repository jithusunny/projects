---
description: 
globs: 
alwaysApply: false
---
# ðŸ§­ Project Rules

## 1. Vision

- A modular, minimal, expressive app for managing projects and tasks
- Designed for clarity, maintainability, and long-term extensibility
- Modern frontend + backend with strong boundaries and a clean separation of concerns
- System should feel fast, consistent, fun to work on â€” never bloated or chaotic

---

## 2. Functional Scope

### Core Entities
- **Projects**: can contain multiple tasks
- **Tasks**: can exist independently or belong to a project

### Core Features
- Create, read, update, delete projects
- Create, read, update, delete tasks (standalone or under projects)
- Mark tasks as done, toggle visibility of completed tasks
- Admin import/export interface (CSV-based, via UI)
- Cohesive and minimal UI using Shoelace design system

---

## 3. Architectural Overview

- **Frontend**
  - Built with Web Components using Lit
  - Uses Shoelace for ready UI
  - Vite-based setup, tested via Playwright
  - Full details in [frontend.mdc](mdc:.cursor/frontend.mdc)

- **Backend**
  - FastAPI + async SQLAlchemy + PostgreSQL
  - DB migrations via Alembic
  - Dockerized DB for local development
  - Full details in [backend.mdc](mdc:.cursor/backend.mdc)

---

## 4. Design Philosophy

- Component-first mindset: pages and views are just organized groups of reusable parts
- Minimal, declarative UI with strict architectural consistency
- Styling via design tokens (CSS variables), not utility classes or themes
- Data access is explicit and direct â€” no magic context, no reactive black boxes
- All code (frontend or backend) must follow written rules â€” Cursor and human alike

---

## 5. File Structure Overview

- `backend/` â€” all backend logic and APIs  
- `frontend/` â€” all UI, assets, and web components  
- Each side enforces its own rule file ([backend.mdc](mdc:.cursor/backend.mdc), [frontend.mdc](mdc:.cursor/frontend.mdc))

---

## 6. Rules Enforcement

- Cursor and developers must treat this file as the projectâ€™s contract
- Refer to:
  - [frontend.mdc](mdc:.cursor/frontend.mdc) when building or editing UI  
  - [backend.mdc](mdc:.cursor/backend.mdc) when writing or updating backend logic
- Do not bypass architectural boundaries unless explicitly approved
